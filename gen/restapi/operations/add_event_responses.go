// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "gardensentry.v1/gen/models"
)

// AddEventCreatedCode is the HTTP code returned for type AddEventCreated
const AddEventCreatedCode int = 201

/*AddEventCreated Created

swagger:response addEventCreated
*/
type AddEventCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Event `json:"body,omitempty"`
}

// NewAddEventCreated creates AddEventCreated with default headers values
func NewAddEventCreated() *AddEventCreated {

	return &AddEventCreated{}
}

// WithPayload adds the payload to the add event created response
func (o *AddEventCreated) WithPayload(payload *models.Event) *AddEventCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add event created response
func (o *AddEventCreated) SetPayload(payload *models.Event) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddEventCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AddEventDefault error

swagger:response addEventDefault
*/
type AddEventDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddEventDefault creates AddEventDefault with default headers values
func NewAddEventDefault(code int) *AddEventDefault {
	if code <= 0 {
		code = 500
	}

	return &AddEventDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add event default response
func (o *AddEventDefault) WithStatusCode(code int) *AddEventDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add event default response
func (o *AddEventDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add event default response
func (o *AddEventDefault) WithPayload(payload *models.Error) *AddEventDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add event default response
func (o *AddEventDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddEventDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
